// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  login     String
  password  String
  version   Int @default(1)
  createdAt DateTime @default(now()) @map("created_at")
  updateAt  DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Track {
  id       String  @id @default(uuid())
  name     String
  artistId String? @map("artist_id")
  albumId  String? @map("album_id")
  duration Int
  artist   Artist? @relation(fields: [artistId], references: [id])
  album    Album?  @relation(fields: [albumId], references: [id])

  @@map("tracks")
}

model Artist {
  id     String  @id @default(uuid())
  name   String
  grammy Boolean @default(false)
  albums Album[]
  tracks Track[]
  
  @@map("artists")
}

model Album {
  id       String  @id @default(uuid())
  name String
  year Int
  artistId String? @map("artist_id")
  tracks   Track[]
  artist   Artist? @relation(fields: [artistId], references: [id])
}

model Favorites {
  tracks String []
  artists String[]
  albums String[]

  @@unique([tracks, artists, albums])
}